해시 함수를 적용시켜 동일한 길이의 키를 만들어 데이터를 분산시키는 것.
삽입 수정 삭제가 O(1)로 공간을 포기하고 속도가 매우 뛰어나다.
해시에서는 어쩔 수 없이 충돌의 문제가 존재한다.

충돌 회피에는 두 가지 방법이 있다.
1. Chaining
2. Open addressing

Chaning에서는 키가 충돌했을 때, 인덱스를 연결리스트로 두어 충돌을 회피하는 방법이다.
최악의 경우에 한 인덱스에 모두 키가 몰려있을경우 삽입 O(1)을 제외하고 수정 삭제가 O(N)의 시간 복잡도를 갖는다.

Open addressing에서는 키가 충돌했을 때, 인접한 다음 인덱스에 키를 저장하는 방법이다.
두 가지 특징을 갖는다.
1. Linear Probing : 충돌 발생 시 다음 인덱스로 이동하여 Cache hit rate(적중률)이 높다.
2. Clustering : 비슷한 키가 특정 인덱스에 몰려 성능이 저하될 수 있다.
3. Quadratic Probing : 충돌 발생 시 1, 3, 5, ... 칸씩 이동하는 방식이다. 1, 2번 특징을 타협하는 셈.
4. Double Hashing : 충돌 발생 시 이동할 칸의 수를 새로운 해시 함수로 계산하는 방식이다.
